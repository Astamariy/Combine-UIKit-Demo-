import Foundation
import Combine

final class {{ module_info.name }}TableViewCellModel: ViewModelType {

    // MARK: - TypeAlias
    
    typealias Unit = {{ module_info.name }}TableViewCellUnit
    typealias EventTracker = Unit.EventTracker
    
    // MARK: - Model Configuration
    
    struct Configuration {
        
    }
    
    // MARK: - Dependencies
    
    struct Dependencies {
        
    }
    
    // MARK: - Private property
    
    private let configuration: Configuration
    private let dependencies: Dependencies
    private let eventTracker: EventTracker
    
    // MARK: - Initialization
    
    init(
        dependencies: Dependencies,
        configuration: Configuration,
        eventTracker: EventTracker
    ) {
        self.dependencies = dependencies
        self.configuration = configuration
        self.eventTracker = eventTracker
    }
    
    func transform(input: Unit.Input) -> Unit.Output {
        return Unit.Output(
            empty: Empty<Void, Never>().eraseToAnyPublisher()
        )
    }
}

// MARK: - ViewModel transform

private extension {{ module_info.name }}TableViewCellModel {
    
}
